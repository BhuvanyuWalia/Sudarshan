<% layout("/layouts/boilerplate.ejs") %>
<h1 class="title text-center mt-3">Register</h1>

<div class="mt-3 row">
    <div class="col-6 offset-3">
        <form action="/register" class="user-form needs-validation" novalidate method="POST">
            <!-- Email -->
            <div class="mb-3">
                <label for="email" class="form-label">Enter Email</label>
                <input type="email" name="email" id="email" class="form-control" required>
                <div class="valid-feedback">Looks good!</div>
                <div class="invalid-feedback">Please enter a valid email address.</div>
            </div>

            <!-- Username -->
            <div class="mb-3">
                <label for="username" class="form-label">Enter Username</label>
                <input type="text" name="username" id="username" class="form-control" required>
                <div class="valid-feedback">Looks good!</div>
                <div class="invalid-feedback">Username is required.</div>
            </div>

            <!-- Password -->
            <div class="mb-3">
                <label for="password" class="form-label">Enter Password</label>
                <input type="password" name="password" id="password" class="form-control" required minlength="6">
                <div class="valid-feedback">Looks strong!</div>
                <div class="invalid-feedback">Please enter a password (min 6 characters).</div>
            </div>

            <!-- Confirm Password -->
            <div class="mb-3">
                <label for="password-c" class="form-label">Confirm Password</label>
                <input type="password" name="password-c" id="password-c" class="form-control" required>
            </div>

            <button class="btn btn-dark mt-2 w-100">Register</button>
        </form>
    </div>
</div>

<!-- Validation Script -->
<script>
    const form = document.querySelector('.user-form');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('password-c');

    form.addEventListener('submit', function (e) {
        // Bootstrap's native validation
        if (!form.checkValidity()) {
            e.preventDefault();
            e.stopPropagation();
        }

        // Password match validation
        const existingAlert = document.querySelector('.password-error');
        if (password.value !== confirmPassword.value) {
            e.preventDefault();
            confirmPassword.classList.add('is-invalid');
            if (!existingAlert) {
                const alert = document.createElement('div');
                alert.className = 'alert alert-danger mt-2 password-error';
                alert.innerText = 'Passwords do not match.';
                confirmPassword.parentNode.appendChild(alert);
            }
        } else {
            if (existingAlert) existingAlert.remove();
        }

        form.classList.add('was-validated');
    });
</script>
